{"version":3,"sources":["components/Timer.js","components/ToDo.js","components/ClearAll.js","components/Adding.js","components/ToDoList.js","App.js","index.js"],"names":["Timer","calendarDate","useState","remainTime","setRemainTime","interval","useRef","useEffect","setInterval","now","Date","getTime","deltaTime","days","Math","floor","hours","minutes","seconds","clearInterval","ToDo","id","toDo","isDone","handleCheck","deleteTask","setCalendarDate","finish","setFinish","className","type","name","defaultChecked","onClick","onChange","disabled","selected","date","onCalendarClose","minDate","showTimeInput","filterTime","time","currentDate","selectedDate","dateFormat","customInput","ClearAll","clearHandle","Adding","addTask","newTask","setNewTask","value","placeholder","e","target","onKeyDown","key","ToDoList","setId","task","setTask","taskList","setTaskList","counter","newTaskList","map","filter","Boolean","updateCheckBox","checkField","record","txt","trim","length","charAt","toUpperCase","slice","newId","concat","text","includes","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61ce77fd.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\r\n\r\nexport default function Timer({calendarDate}) {  \r\n  \r\n  const [remainTime, setRemainTime] = useState('Not Set')\r\n\r\n  let interval = useRef()\r\n\r\n  const startTimer = () => {\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime()\r\n      const deltaTime = calendarDate - now;\r\n\r\n      // from zilion milliseconds make days, hours...\r\n      let days = Math.floor(deltaTime / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor(\r\n        (deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      let minutes = Math.floor((deltaTime % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((deltaTime % (1000 * 60)) / 1000);    \r\n      \r\n      if (deltaTime < 0) {\r\n        // stop timer\r\n        clearInterval(interval)\r\n      } else {\r\n        // update timer\r\n        setRemainTime(`${days}d ${hours}h ${minutes}m ${seconds}s`)\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n    Remaining time: {remainTime}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport \"./ToDo.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// Format single task for rendering //\r\nexport default function ToDo({\r\n  id,\r\n  toDo,\r\n  isDone,\r\n  handleCheck,\r\n  deleteTask,\r\n}) {\r\n  const [calendarDate, setCalendarDate] = useState(new Date());\r\n  // finish is just flag for checkbox\r\n  const [finish, setFinish] = useState(isDone);\r\n  // Formating time limits\r\n  // No less hours then current time\r\n  const filterPassedTime = (time) => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n    return currentDate.getTime() < selectedDate.getTime();\r\n  };\r\n\r\n  // Handle CheckBox\r\n  const checkHandle = () => {\r\n    handleCheck(id, isDone);\r\n  };\r\n  // Handle delete button\r\n  const deleteHandler = () => {\r\n    deleteTask(id);\r\n  };\r\n const callChild = () => {\r\n   \r\n }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"ToDo\">\r\n        <div className=\"id\">{id}.</div>\r\n        <div className={finish ? \"taskFinish\" : \"taskUnfinish\"}>{toDo}</div>\r\n        <input\r\n          id=\"checkBox\"\r\n          className=\"checkBox\"\r\n          type=\"checkbox\"\r\n          name=\"isDone\"\r\n          defaultChecked={isDone}\r\n          onClick={checkHandle}\r\n          onChange={() => {\r\n            setFinish(!finish);\r\n          }}\r\n        ></input>\r\n        <button\r\n          className=\"deleteBtn btn\"\r\n          disabled={!finish}\r\n          onClick={deleteHandler}\r\n        >\r\n          Delete\r\n        </button>\r\n      </section>\r\n      <div className='tickingTime'>\r\n        <Timer calendarDate={calendarDate} />\r\n        <DatePicker\r\n          selected={calendarDate}\r\n          onChange={(date) => setCalendarDate(date)}\r\n          onCalendarClose={callChild}\r\n          minDate={new Date()}\r\n          //showTimeSelect\r\n          showTimeInput\r\n          filterTime={filterPassedTime}\r\n          dateFormat=\"dd/MM/yy h:mm aa\"\r\n          customInput={<button className='calendarBtn btn'>Set</button> }     \r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './ClearAll.css';\r\n\r\n// Reorder or clear list\r\nfunction ClearAll({ clearHandle }) {\r\n  const handleClear = () => {\r\n    clearHandle();\r\n  };\r\n\r\n  return (\r\n    <button className='clearBtn btn' onClick={handleClear}>\r\n      Clear All\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ClearAll;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Adding.css';\r\n\r\n// Add new task on list\r\nfunction Adding({ addTask }) {\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const appendHandle = () => {\r\n    addTask(newTask);\r\n    setNewTask('');\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      addTask(newTask);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='adding'>\r\n      <input\r\n        className='textbox'\r\n        type='text'\r\n        value={newTask}\r\n        placeholder='Enter new task'\r\n        onChange={(e) => {\r\n          setNewTask(e.target.value);\r\n        }}\r\n        onKeyDown={handleKeyDown}\r\n      ></input>\r\n      <button className='appendBtn btn' name='append' onClick={appendHandle}>\r\n        Enter\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adding;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './ToDoList.css';\r\nimport ToDo from './ToDo';\r\nimport ClearAll from './ClearAll';\r\nimport Adding from './Adding';\r\n\r\n//import DatePicker from 'react-datepicker';\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\n\r\n// Create a list of task\r\nfunction ToDoList() {\r\n  const [id, setId] = useState(1);\r\n  const [task, setTask] = useState({\r\n    id: id,\r\n    toDo: 'Empty',\r\n    isDone: false\r\n  });\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  // Prevent of duplicate tasks //\r\n  const noDuplicates = (text) => {\r\n    return taskList.map((record) => record.toDo).includes(text);\r\n  };\r\n\r\n  // Add new task to the list //\r\n  const addTask = (txt) => {\r\n    if (txt.trim().length !== 0) {\r\n      txt = txt.trim();\r\n      // Convert first letter to capital\r\n      txt = txt.charAt(0).toUpperCase() + txt.slice(1);\r\n      let newId = id + 1;\r\n      const newTask = { ...task, id: id, toDo: txt };\r\n      const newTaskList = taskList.concat(newTask);\r\n      if (noDuplicates(txt)) {\r\n        alert('This task already exist!');\r\n        return;\r\n      } else {\r\n        setId(newId);\r\n        setTask(newTask);\r\n        setTaskList(newTaskList);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Remove record from list\r\n  function deleteTask(id) {\r\n    let counter = 0;\r\n    const newTaskList = taskList\r\n      .map((task) => {\r\n        if (id !== task.id) {\r\n          return { ...task, id: ++counter };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(Boolean); // filter(Boolean) will delete null from list\r\n    setTaskList(newTaskList);\r\n    setId(++counter);\r\n  }\r\n\r\n  // CheckBox handler\r\n  const updateCheckBox = (id, checkField) => {\r\n    const newTaskList = taskList.map((record) => {\r\n      if (id === record.id) {\r\n        return { ...record, isDone: !checkField };\r\n      }\r\n      return record;\r\n    });\r\n    setTaskList(newTaskList);\r\n  };\r\n\r\n  // Clear All\r\n  const clearHandle = () => {\r\n    setTaskList([]);\r\n    setTask({ ...task, toDo: 'Empty', isDone: false });\r\n    setId(1);\r\n  };\r\n\r\n  return (\r\n    <div className='ToDoList'>\r\n      <div className='appHeader'>\r\n        <Adding addTask={addTask} />\r\n        <ClearAll clearHandle={clearHandle} />\r\n      </div>\r\n\r\n      <div className='list'>\r\n        {taskList.map((record) => {\r\n          return (\r\n            <ToDo\r\n              key={record.toDo}\r\n              handleCheck={updateCheckBox}\r\n              deleteTask={deleteTask}\r\n              {...record}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","//import { useState } from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>ToDo List</header>\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}