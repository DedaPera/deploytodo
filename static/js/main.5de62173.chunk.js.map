{"version":3,"sources":["components/ToDo.js","components/RefreshClear.js","components/Adding.js","components/ToDoList.js","App.js","index.js"],"names":["ToDo","id","toDo","isDone","handleCheck","deleteTask","console","log","className","type","name","defaultChecked","onClick","RefreshClear","clearHandle","refreshHandle","Adding","addTask","useState","newTask","setNewTask","value","placeholder","onChange","e","target","onKeyDown","key","ToDoList","setId","task","setTask","taskList","setTaskList","counter","newTaskList","map","filter","Boolean","updateCheckBox","checkField","record","txt","trim","length","charAt","toUpperCase","slice","concat","forEach","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5de62173.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ToDo.css';\r\n\r\n// Format single task for rendering\r\nfunction ToDo({ id, toDo, isDone, handleCheck, deleteTask }) {\r\n  // Handle CheckBox\r\n  const checkHandle = () => {\r\n    handleCheck(id, isDone);\r\n  };\r\n  // Handle delete button\r\n  const deleteHandler = () => {\r\n    deleteTask(id);\r\n  };\r\n  console.log(typeof isDone);\r\n\r\n  return (\r\n    <section className='ToDo'>\r\n      <div className='id'>{id}. </div>\r\n      <div className='task'> {toDo} </div>\r\n      <input\r\n        className='checkBox'\r\n        type='checkbox'\r\n        name='isDone'\r\n        defaultChecked={isDone}\r\n        // TODO change color\r\n\r\n        onClick={checkHandle}\r\n      ></input>\r\n      <button className='deleteBtn btn' onClick={deleteHandler}>\r\n        Delete\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from 'react';\r\nimport './RefreshClear.css';\r\n\r\n// Refresh or clear list\r\nfunction RefreshClear({ clearHandle, refreshHandle }) {\r\n  const handleRefresh = () => {\r\n    refreshHandle();\r\n  };\r\n\r\n  const handleClear = () => {\r\n    clearHandle();\r\n  };\r\n\r\n  return (\r\n    <div className='refreshClear'>\r\n      <button className='refreshBtn btn' onClick={handleRefresh}>\r\n        Refresh\r\n      </button>\r\n      <button className='clearBtn btn' onClick={handleClear}>\r\n        Clear All\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefreshClear;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Adding.css';\r\n\r\n// Add new task on list\r\nfunction Adding({ addTask }) {\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const appendHandle = () => {\r\n    addTask(newTask);\r\n    setNewTask('');\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      addTask(newTask);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='adding'>\r\n      <input\r\n        className='textbox'\r\n        type='text'\r\n        value={newTask}\r\n        placeholder='Enter new task'\r\n        onChange={(e) => {\r\n          setNewTask(e.target.value);\r\n        }}\r\n        onKeyDown={handleKeyDown}\r\n      ></input>\r\n      <button className='appendBtn btn' name='append' onClick={appendHandle}>\r\n        Enter\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adding;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './ToDoList.css';\r\nimport ToDo from './ToDo';\r\nimport RefreshClear from './RefreshClear';\r\nimport Adding from './Adding';\r\n\r\n// Create a list of task\r\nfunction ToDoList() {\r\n  const [id, setId] = useState(1);\r\n  const [task, setTask] = useState({ id: id, toDo: 'Empty', isDone: false });\r\n\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  // Update new task to the list\r\n  const addTask = (txt) => {\r\n    if (txt !== '' && txt.trim().length !== 0) {\r\n      txt = txt.charAt(0).toUpperCase() + txt.slice(1);\r\n      let newId = id + 1;\r\n      setId(newId);\r\n      const newTask = { ...task, id: id, toDo: txt };\r\n      setTask(newTask);\r\n      const newTaskList = taskList.concat(newTask);\r\n      setTaskList(newTaskList);\r\n    }\r\n  };\r\n\r\n  // Remove record from list\r\n  function deleteTask(id) {\r\n    let counter = 0;\r\n    const newTaskList = taskList\r\n      .map((task) => {\r\n        counter++;\r\n        if (id === task.id) {\r\n          return null;\r\n        }\r\n        return { ...task, id: counter };\r\n      })\r\n      .filter(Boolean); // filter(Boolean) will delete null from list\r\n    setTaskList(newTaskList);\r\n  }\r\n\r\n  // CheckBox handler\r\n  const updateCheckBox = (id, checkField) => {\r\n    const newTaskList = taskList.map((record) => {\r\n      if (id === record.id) {\r\n        return { ...record, isDone: !checkField };\r\n      }\r\n      return record;\r\n    });\r\n    setTaskList(newTaskList);\r\n  };\r\n\r\n  // Clear All\r\n  const clearHandle = () => {\r\n    setTaskList([]);\r\n    setTask({ ...task, toDo: 'Empty', isDone: false });\r\n    setId(1);\r\n  };\r\n\r\n  // Refresh list\r\n  const refreshHandle = () => {\r\n    let newTaskList = [];\r\n    let counter = 0;\r\n    taskList.forEach((record) => {\r\n      counter++;\r\n      newTaskList.push({ ...record, id: counter });\r\n    });\r\n    setTaskList(newTaskList);\r\n    setId(++counter);\r\n  };\r\n\r\n  return (\r\n    <div className='ToDoList'>\r\n      <Adding addTask={addTask} />\r\n      <RefreshClear clearHandle={clearHandle} refreshHandle={refreshHandle} />\r\n      {taskList.map((record) => {\r\n        return (\r\n          <ToDo\r\n            key={record.id}\r\n            handleCheck={updateCheckBox}\r\n            deleteTask={deleteTask}\r\n            {...record}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","//import { useState } from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>ToDo List</header>\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}